!function(t){var e={};function n(o){if(e[o])return e[o].exports;var s=e[o]={i:o,l:!1,exports:{}};return t[o].call(s.exports,s,s.exports,n),s.l=!0,s.exports}n.m=t,n.c=e,n.d=function(t,e,o){n.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:o})},n.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},n.t=function(t,e){if(1&e&&(t=n(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var o=Object.create(null);if(n.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var s in t)n.d(o,s,function(e){return t[e]}.bind(null,s));return o},n.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return n.d(e,"a",e),e},n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},n.p="",n(n.s=0)}([function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.convert=e.Log=e.Converter=void 0;e.Converter=class{constructor(t){this.log=t}};const o={PO:n(1).POConverter};class s{constructor(t){this.lines=t,this.curLine=t[0],this.curLineIdx=0}next(){return this.curLineIdx===this.lines.length-1?null:new s(this.lines.slice(this.curLineIdx+1))}*read(){let t=this;for(;null!==t;)yield t,t=t.next()}}function i(t,e){return new o[t](new s(e.split("\n"))).convert().join("\n")}e.Log=s,e.convert=i,"object"==typeof window&&(window.convert=i)},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.POConverter=void 0;const o=n(0);function s(t,e){const n={specie:t,name:e||t,hp:100};return n.nickname&&(n.nickname=e),n}function i(t,e){return{name:t,pNum:e,pokemon:{}}}function r(t){switch(t){case"Attack":return"atk";case"Defense":return"def";case"Sp. Att.":return"spa";case"Sp. Def.":return"spd";case"Speed":return"spe";default:throw new Error("Unrecognized stat: "+t)}}function a(t,e){e=null==e?void 0:e.trim();const[n,o]=[t.p1,t.p2];switch(e){case void 0:case""+n.name:case n.name+"'s":return[n,o];case"The foe's":case""+o.name:case o.name+"'s":return[o,n];default:throw new Error("Couldn't parse players in string: "+JSON.stringify(e))}}function c(t){if(t.includes("(")){const e=t.slice(t.lastIndexOf("(")+1,t.lastIndexOf(")"));return s(e,t.slice(0,-(e.length+4)))}return s(t.slice(0,t.endsWith("!")?-1:void 0))}function u(t,e){const n=[];for(const o of Object.values(t.p1.pokemon))o.name.toLowerCase()===e.toLowerCase()&&n.push({player:t.p1,pokemon:o});for(const o of Object.values(t.p2.pokemon))o.name.toLowerCase()===e.toLowerCase()&&n.push({player:t.p2,pokemon:o});if(!n.length)throw new Error("Could not parse owner for pokemon: "+JSON.stringify(e));return n.length>1?(t=>{var n;let o=null;for(const e of t){const{player:t,pokemon:s}=e;(null===(n=t.curPokemon)||void 0===n?void 0:n.name.toLowerCase())!==s.name.toLowerCase()&&(o={player:t,pokemon:s})}if(!o)throw new Error("Could not parse owner for pokemon: "+JSON.stringify(e));return o})(n):n[0]}function l(t,e,n){return"1"===t.pNum?n:e}const p=["Bounce"],m={Protect:(t,e)=>[`|-singleturn|p${e.pNum}a: ${e.curPokemon.name}|protect`],"Perish Song":(t,e,n)=>["|-fieldactivate|move: Perish Song",`|-start|p1a: ${e.curPokemon.name}|perish3`,`|-start|p2a: ${n.curPokemon.name}|perish3`],"Mean Look":(t,e,n)=>[`|-activate|p${n.pNum}a: ${n.curPokemon.name}|trapped`]};class d extends o.Converter{constructor(t){super(t),this.log=t,this.ctx={p1:null,p2:null,started:!1}}convert(){const t=[];for(const e of this.log.read()){let n;try{n=this.convertLine(e,e.curLine)}catch(t){throw new Error(`${t.message}\n\tAt line: ${e.curLine}\n\tContext: ${JSON.stringify(this.ctx,void 0,4)}`)}t.push(...n)}return t}convertLine(t,e){var n,o,s,d,h,f,v,$,x,k,y,g,w,N,P,S,b,O,L,C,j,I,T,M,U,B,_,E,A,D,R,J,z,G,H,W,V,Y,q,F;let K=void 0;if(K=null===(n=e.match(/Battle between (.+) and (.+) (started|is underway)!/))||void 0===n?void 0:n.slice(1),K){const[t,e]=K;return this.ctx.p1=i(t,"1"),this.ctx.p2=i(e,"2"),[`|player|p1|${this.ctx.p1.name}|1`,`|player|p2|${this.ctx.p2.name}|2`]}if(K=null===(o=e.match(/Mode: (.+)/))||void 0===o?void 0:o.slice(1),K){const[t]=K;return["|gametype|"+t.toLowerCase()]}if(K=null===(s=e.match(/Rule: (.+)/))||void 0===s?void 0:s.slice(1),K){const[t]=K;return["|rule|"+t]}if(K=null===(d=e.match(/Tier: (.+)/))||void 0===d?void 0:d.slice(1),K){const[t]=K,{tier:e,gen:n}=function(t){var e,n;const o={RBY:1,GSC:2,ADV:3,DPP:4,HGSS:4,DP:4,BW:5},s={tier:"OverUsed",gen:5},i={gen:null===(e=t.match(new RegExp(`(${Object.keys(o).join("|")}|\\d)`,"i")))||void 0===e?void 0:e.slice(1),tier:null===(n=t.match(new RegExp(`(${["OU","OverUsed","UU","UnderUsed","RU","RarelyUsed","NU","NeverUsed","LC","Little Cup"].join("|")})`,"i")))||void 0===n?void 0:n.slice(1)};if(i.gen){const[e]=i.gen;if(isNaN(parseInt(e))){const n=o[e.toUpperCase()];if(!n)throw new Error("Couldn't parse tier: "+JSON.stringify(t));s.gen=n}else s.gen=parseInt(e)}if(i.tier){const[t]=i.tier;s.tier=t}return s}(t);return this.ctx.gen=n,["|gen|"+n,`|tier|[Gen ${n}] ${e}`]}if(K=null===(h=e.match(/(.+): (.+)/))||void 0===h?void 0:h.slice(1),K){const[t,e]=K;return[`|c|${[this.ctx.p1.name,this.ctx.p2.name].includes(t)?"â˜†":""}${t}|${e}`]}if(K=null===(f=e.match(/(.+) is watching the battle/))||void 0===f?void 0:f.slice(1),K){const[t]=K;return["|j|"+t]}if(K=null===(v=e.match(/(.+) stopped watching the battle/))||void 0===v?void 0:v.slice(1),K){const[t]=K;return["|l|"+t]}if(K=null===($=e.match(/(.+) won the battle/))||void 0===$?void 0:$.slice(1),K){const[t]=K;return["|win|"+t]}if(K=null===(x=e.match(/(.+) forfeited against (.+)!/))||void 0===x?void 0:x.slice(1),K){const[t,e]=K;return[`|-message|${t} forfeited`,"|","|win|"+e]}if(K=null===(k=e.match(/Start of turn (\d+)!?/))||void 0===k?void 0:k.slice(1),K){const[t]=K,e=parseInt(t);if(isNaN(e))throw new Error("Couldn't parse turn: "+JSON.stringify(t));this.ctx.turn=e;const n=["|","|turn|"+e];return this.ctx.started||(this.ctx.started=!0,n.unshift("|start")),n}if(K=null===(y=e.match(/(.+) sent out (.+)/))||void 0===y?void 0:y.slice(1),K){const[t,e]=K,n=c(e),[o]=a(this.ctx,t);o.pokemon[n.name]||(o.pokemon[n.name]=n),o.curPokemon=n,o.curPokemon.toxicTurns&&this.ctx.gen>2&&(o.curPokemon.toxicTurns=1);const s=[`|switch|p${o.pNum}a: ${n.name}|${n.specie}|${n.hp}/100${n.status?" "+n.status:""}`];return this.ctx.started||(this.ctx.started=!0,s.unshift("|start")),s}if(K=null===(g=e.match(/(.+'s )?(.+) used (.+)!/))||void 0===g?void 0:g.slice(1),K){const[e,n,o]=K,s=[];this.ctx.started||(this.ctx.started=!0,s.push("|start"));const i=a(this.ctx,e)[0];if(!i.curPokemon){let e=null;for(const{curLine:n}of t.next().read()){const t=null===(w=n.match(/(.+'s )?(.+) used .+!/))||void 0===w?void 0:w.slice(1);if(t){const[n,o]=t;e={player:a(this.ctx,n)[0],pokemon:c(o)};break}}i.curPokemon=c(n),i.pokemon[i.curPokemon.name]=i.curPokemon,s.push(`|switch|p${i.pNum}a: ${i.curPokemon.name}|${i.curPokemon.name}|100`);const o=l(i,this.ctx.p1,this.ctx.p2);o.curPokemon=e.pokemon,o.pokemon[e.pokemon.name]=e.pokemon,s.push(`|switch|p${o.pNum}a: ${o.curPokemon.name}|${o.curPokemon.name}|100`)}const{player:r,pokemon:d}=u(this.ctx,n),h=l(r,this.ctx.p1,this.ctx.p2);this.ctx.lastMoveBy=r,s.push(`|move|p${r.pNum}a: ${d.name}|${o}|p${h.pNum}a: ${r.curPokemon.name}`);const f=!!(null===(N=t.next())||void 0===N?void 0:N.curLine.match(/The attack of(.+'s )? missed/)),v=!!(null===(P=t.next())||void 0===P?void 0:P.curLine.match(/But it failed!/));return f&&(s[0]+="|miss",s.push(`|-miss|p${r.pNum}a: ${d.name}`)),v&&s.push(`|-fail|p${r.pNum}a: ${d.name}|${o}`),p.includes(o)&&(s[0]+="|[from]lockedmove"),m[o]&&s.push(...m[o](this.ctx,r,h)),s}if(K=null===(S=e.match(/(.+) lost \d+ HP! \((\d+)% of its health\)/))||void 0===S?void 0:S.slice(1),K){const[t,e]=K,{player:n,pokemon:o}=u(this.ctx,t);let s=o.hp-parseInt(e);return s<0&&(s=0),o.hp=s,[`|-damage|p${n.pNum}a: ${o.name}|${o.hp}/100${o.status?" "+o.status:""}`]}if(K=null===(b=e.match(/(?:.+'s )?(.+) lost (\d+)% of its health!/))||void 0===b?void 0:b.slice(1),K){const[t,e]=K,{player:n,pokemon:o}=u(this.ctx,t);let s=o.hp-parseInt(e);return s<0&&(s=0),o.hp=s,[`|-damage|p${n.pNum}a: ${o.name}|${o.hp}/100${o.status?" "+o.status:""}`]}if(K=null===(O=e.match(/(?:.+'s )?(.+) regained health!/))||void 0===O?void 0:O.slice(1),K){const[t]=K,{player:e,pokemon:n}=u(this.ctx,t);let o=n.hp+50;return o>100&&(o=100),n.hp=o,[`|-heal|p${e.pNum}a: ${n.name}|${n.hp}/100${n.status?" "+n.status:""}`]}if(K=null===(L=e.match(/(?:.+'s )?(.+) fainted!/))||void 0===L?void 0:L.slice(1),K){const[t]=K,{player:e,pokemon:n}=u(this.ctx,t);return[`|faint|p${e.pNum}a: ${n.name}`]}if("It's super effective!"===e){const t=l(this.ctx.lastMoveBy,this.ctx.p1,this.ctx.p2);return[`|-supereffective|p${t.pNum}a: ${t.curPokemon.name}`]}if("It's not very effective..."===e){const t=l(this.ctx.lastMoveBy,this.ctx.p1,this.ctx.p2);return[`|-resisted|p${t.pNum}a: ${t.curPokemon.name}`]}if("A critical hit!"===e){const t=l(this.ctx.lastMoveBy,this.ctx.p1,this.ctx.p2);return[`|-crit|p${t.pNum}a: ${t.curPokemon.name}`]}if(K=null===(C=e.match(/It had no effect on .+!/))||void 0===C?void 0:C.slice(1),K){const t=l(this.ctx.lastMoveBy,this.ctx.p1,this.ctx.p2);return[`|-immune|p${t.pNum}a: ${t.curPokemon.name}`]}if(K=null===(j=e.match(/(?:.+'s )?(.+) is paralyzed! It may be unable to move!/))||void 0===j?void 0:j.slice(1),K){const[t]=K,{player:e,pokemon:n}=u(this.ctx,t);return n.status="par",[`|-status|p${e.pNum}a: ${n.name}|par`]}if(K=null===(I=e.match(/(?:.+'s )?(.+) is paralyzed! It can't move!/))||void 0===I?void 0:I.slice(1),K){const[t]=K,{player:e,pokemon:n}=u(this.ctx,t);return[`|cant|p${e.pNum}a: ${n.name}`]}if(K=null===(T=e.match(/(?:.+'s )?(.+) fell asleep!/))||void 0===T?void 0:T.slice(1),K){const[t]=K,{player:e,pokemon:n}=u(this.ctx,t);return n.status="slp",[`|-status|p${e.pNum}a: ${n.name}|slp`]}if(K=null===(M=e.match(/(?:.+'s )?(.+) is fast asleep!/))||void 0===M?void 0:M.slice(1),K){const[t]=K,{player:e,pokemon:n}=u(this.ctx,t);return[`|cant|p${e.pNum}a: ${n.name}`]}if(K=null===(U=e.match(/(?:.+'s )?(.+) was (badly )?poisoned!/))||void 0===U?void 0:U.slice(1),K){const[t,e]=K,{player:n,pokemon:o}=u(this.ctx,t);return o.status=e?"psn":"tox","tox"===o.status&&(o.toxicTurns=1),[`|-status|p${n.pNum}a: ${o.name}|psn`]}if(K=null===(B=e.match(/(?:.+'s )?(.+) was hurt by poison!/))||void 0===B?void 0:B.slice(1),K){const[t]=K,{player:e,pokemon:n}=u(this.ctx,t);let o;return o="tox"===n.status?6*n.toxicTurns++:1===this.ctx.gen?6:12,n.hp-=o,[`|-damage|p${e.pNum}a: ${n.name}|${n.hp}/100 tox|[from] ${n.status}`]}if(K=null===(_=e.match(/(?:.+'s )?(.+) woke up!/))||void 0===_?void 0:_.slice(1),K){const[t]=K,{player:e,pokemon:n}=u(this.ctx,t);return n.status=void 0,[`|-curestatus|p${e.pNum}a: ${n.name}|slp`]}if(K=null===(E=e.match(/(?:.+'s )?(.+) restored a little HP using its Leftovers!/))||void 0===E?void 0:E.slice(1),K){const[t]=K,{player:e,pokemon:n}=u(this.ctx,t);let o=n.hp+6;return o>100&&(o=100),n.hp=o,[`|-heal|p${e.pNum}a: ${n.name}|${n.hp}/100${n.status?" "+n.status:""}|[from] item: Leftovers`]}if(K=null===(A=e.match(/(?:.+'s )?(.+)'s perish count fell to (\d)!/))||void 0===A?void 0:A.slice(1),K){const[t,e]=K,{player:n,pokemon:o}=u(this.ctx,t);return"3"===e?[]:[`|-start|p${n.pNum}a: ${o.name}|perish${e}`]}if(K=null===(D=e.match(/(.+'s )?(.+) was dragged out!/))||void 0===D?void 0:D.slice(1),K){const[t,e]=K,n=c(e),[o]=a(this.ctx,t);return o.pokemon[n.name]||(o.pokemon[n.name]=n),o.curPokemon=n,o.curPokemon.toxicTurns&&this.ctx.gen>2&&(o.curPokemon.toxicTurns=1),[`|drag|p${o.pNum}a: ${n.name}|${n.specie}|${n.hp}/100${n.status?" "+n.status:""}`]}if(K=null===(R=e.match(/(?:.+'s )?(.+) sprang up!/))||void 0===R?void 0:R.slice(1),K){const[t]=K,{player:e,pokemon:n}=u(this.ctx,t),o=l(e,this.ctx.p1,this.ctx.p2);return[`|move|p${e.pNum}a: ${n.name}|Bounce|[still]`,`|-prepare|p${e.pNum}a: ${n.name}|Bounce|p${o.pNum}a: ${o.curPokemon.name}`]}if(K=null===(J=e.match(/(?:.+'s )?(.+) fell for the taunt!/))||void 0===J?void 0:J.slice(1),K){const[t]=K,{player:e,pokemon:n}=u(this.ctx,t);return[`|-start|p${e.pNum}a: ${n.name}|move: Taunt`]}if(K=null===(z=e.match(/(?:.+'s )?(.+) can't use (.+) after the taunt!/))||void 0===z?void 0:z.slice(1),K){const[t,e]=K,{player:n,pokemon:o}=u(this.ctx,t);return[`|cant|p${n.pNum}a: ${o.name}|move: Taunt|${e}`]}if(K=null===(G=e.match(/Spikes were scattered all around the feet of (.+)'s team!/))||void 0===G?void 0:G.slice(1),K){const[t]=K,e=a(this.ctx,t)[0];return[`|-sidestart|p${e.pNum}: ${e.name}|Spikes`]}if(K=null===(H=e.match(/Pointed stones float in the air around (.+) team!/))||void 0===H?void 0:H.slice(1),K){const[t]=K,e=a(this.ctx,t)[0];return[`|-sidestart|p${e.pNum}: ${e.name}|Stealth Rock`]}if(K=null===(W=e.match(/Poison Spikes were scattered all around the feet of (.+)'s team!/))||void 0===W?void 0:W.slice(1),K){const[t]=K,e=a(this.ctx,t)[0];return[`|-sidestart|p${e.pNum}: ${e.name}|Toxic Spikes`]}if(K=null===(V=e.match(/(?:.+'s )?(.+) blew away (.+)!/))||void 0===V?void 0:V.slice(1),K){const[t,e]=K,{player:n}=u(this.ctx,t),o=l(n,this.ctx.p1,this.ctx.p2);return[`|-sideend|p${o.pNum}: ${o.name}|${e}`]}if(K=null===(Y=e.match(/(?:.+'s )?(.+)'s (Attack|Defense|Speed|Sp\. Att.|Sp\. Def\.) (sharply )?(rose|fell)!/))||void 0===Y?void 0:Y.slice(1),K){const[t,e,n,o]=K,{player:s,pokemon:i}=u(this.ctx,t);return[`|-${"fell"===o?"un":""}boost|p${s.pNum}a: ${i.name}|${r(e)}|${n?"2":"1"}`]}if(K=null===(q=e.match(/(?:.+'s )?(.+)'s Sand Stream whipped up a sandstorm!/))||void 0===q?void 0:q.slice(1),K){const[t]=K,{player:e,pokemon:n}=u(this.ctx,t);return[`|-weather|Sandstorm|[from] ability: Sand Stream|[of] p${e.pNum}a: ${n.name}`]}if("The sandstorm rages."===e)return["|-weather|Sandstorm|[upkeep]"];if(K=null===(F=e.match(/(?:.+'s )?(.+) is buffeted by the sandstorm!/))||void 0===F?void 0:F.slice(1),K){const[t]=K,{player:e,pokemon:n}=u(this.ctx,t);let o=n.hp-6;return o<0&&(o=0),n.hp=o,[`|-damage|p${e.pNum}a: ${n.name}|${n.hp}/100${n.status?" "+n.status:""}|[from] Sandstorm`]}return[]}}e.POConverter=d}]);